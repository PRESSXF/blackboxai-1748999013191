{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { register } from 'swiper/element';\n// Register Swiper custom elements\nregister();\nlet DetalhesClimaPage = class DetalhesClimaPage {\n  constructor(route, climaService) {\n    this.route = route;\n    this.climaService = climaService;\n    // Dados detalhados do clima\n    this.climaDetalhado = null;\n    // Previsão horária\n    this.previsaoHoraria = [];\n    // Nome da cidade\n    this.cidade = '';\n    // Controle de erro\n    this.erro = '';\n    // Controle de loading\n    this.carregando = false;\n  }\n  ngOnInit() {\n    // Recupera o parâmetro da rota\n    this.cidade = this.route.snapshot.paramMap.get('cidade') || '';\n    if (this.cidade) {\n      this.carregarDadosDetalhados();\n    }\n  }\n  /**\n   * Carrega os dados detalhados do clima\n   */\n  carregarDadosDetalhados() {\n    this.carregando = true;\n    // Busca dados atuais\n    this.climaService.getClimaAtual(this.cidade).subscribe({\n      next: data => {\n        this.climaDetalhado = data;\n        this.carregarPrevisaoHoraria();\n      },\n      error: error => {\n        console.error('Erro ao carregar detalhes:', error);\n        this.erro = 'Não foi possível carregar os detalhes do clima';\n        this.carregando = false;\n      }\n    });\n  }\n  /**\n   * Carrega a previsão horária\n   */\n  carregarPrevisaoHoraria() {\n    this.climaService.getPrevisao5Dias(this.cidade).subscribe({\n      next: data => {\n        // Pega as próximas 24 horas (8 períodos de 3 horas)\n        this.previsaoHoraria = data.list.slice(0, 8);\n        this.carregando = false;\n      },\n      error: error => {\n        console.error('Erro ao carregar previsão horária:', error);\n        this.carregando = false;\n      }\n    });\n  }\n};\nDetalhesClimaPage = __decorate([Component({\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  selector: 'app-detalhes-clima',\n  templateUrl: './detalhes-clima.page.html',\n  styleUrls: ['./detalhes-clima.page.scss'],\n  standalone: false\n})], DetalhesClimaPage);\nexport { DetalhesClimaPage };","map":{"version":3,"names":["Component","CUSTOM_ELEMENTS_SCHEMA","register","DetalhesClimaPage","constructor","route","climaService","climaDetalhado","previsaoHoraria","cidade","erro","carregando","ngOnInit","snapshot","paramMap","get","carregarDadosDetalhados","getClimaAtual","subscribe","next","data","carregarPrevisaoHoraria","error","console","getPrevisao5Dias","list","slice","__decorate","schemas","selector","templateUrl","styleUrls","standalone"],"sources":["/project/sandbox/user-workspace/climaja/src/app/pages/detalhes-clima/detalhes-clima.page.ts"],"sourcesContent":["import { Component, OnInit, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ClimaService } from '../../services/clima.service';\nimport { register } from 'swiper/element';\n\n// Register Swiper custom elements\nregister();\n\n@Component({\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  selector: 'app-detalhes-clima',\n  templateUrl: './detalhes-clima.page.html',\n  styleUrls: ['./detalhes-clima.page.scss'],\n  standalone: false\n})\nexport class DetalhesClimaPage implements OnInit {\n  // Dados detalhados do clima\n  climaDetalhado: any = null;\n  // Previsão horária\n  previsaoHoraria: any[] = [];\n  // Nome da cidade\n  cidade: string = '';\n  // Controle de erro\n  erro: string = '';\n  // Controle de loading\n  carregando: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private climaService: ClimaService\n  ) {}\n\n  ngOnInit() {\n    // Recupera o parâmetro da rota\n    this.cidade = this.route.snapshot.paramMap.get('cidade') || '';\n    if (this.cidade) {\n      this.carregarDadosDetalhados();\n    }\n  }\n\n  /**\n   * Carrega os dados detalhados do clima\n   */\n  private carregarDadosDetalhados() {\n    this.carregando = true;\n    \n    // Busca dados atuais\n    this.climaService.getClimaAtual(this.cidade).subscribe({\n      next: (data) => {\n        this.climaDetalhado = data;\n        this.carregarPrevisaoHoraria();\n      },\n      error: (error) => {\n        console.error('Erro ao carregar detalhes:', error);\n        this.erro = 'Não foi possível carregar os detalhes do clima';\n        this.carregando = false;\n      }\n    });\n  }\n\n  /**\n   * Carrega a previsão horária\n   */\n  private carregarPrevisaoHoraria() {\n    this.climaService.getPrevisao5Dias(this.cidade).subscribe({\n      next: (data) => {\n        // Pega as próximas 24 horas (8 períodos de 3 horas)\n        this.previsaoHoraria = data.list.slice(0, 8);\n        this.carregando = false;\n      },\n      error: (error) => {\n        console.error('Erro ao carregar previsão horária:', error);\n        this.carregando = false;\n      }\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAUC,sBAAsB,QAAQ,eAAe;AAGzE,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC;AACAA,QAAQ,EAAE;AASH,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAY5BC,YACUC,KAAqB,EACrBC,YAA0B;IAD1B,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,YAAY,GAAZA,YAAY;IAbtB;IACA,KAAAC,cAAc,GAAQ,IAAI;IAC1B;IACA,KAAAC,eAAe,GAAU,EAAE;IAC3B;IACA,KAAAC,MAAM,GAAW,EAAE;IACnB;IACA,KAAAC,IAAI,GAAW,EAAE;IACjB;IACA,KAAAC,UAAU,GAAY,KAAK;EAKxB;EAEHC,QAAQA,CAAA;IACN;IACA,IAAI,CAACH,MAAM,GAAG,IAAI,CAACJ,KAAK,CAACQ,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE;IAC9D,IAAI,IAAI,CAACN,MAAM,EAAE;MACf,IAAI,CAACO,uBAAuB,EAAE;IAChC;EACF;EAEA;;;EAGQA,uBAAuBA,CAAA;IAC7B,IAAI,CAACL,UAAU,GAAG,IAAI;IAEtB;IACA,IAAI,CAACL,YAAY,CAACW,aAAa,CAAC,IAAI,CAACR,MAAM,CAAC,CAACS,SAAS,CAAC;MACrDC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACb,cAAc,GAAGa,IAAI;QAC1B,IAAI,CAACC,uBAAuB,EAAE;MAChC,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD,IAAI,CAACZ,IAAI,GAAG,gDAAgD;QAC5D,IAAI,CAACC,UAAU,GAAG,KAAK;MACzB;KACD,CAAC;EACJ;EAEA;;;EAGQU,uBAAuBA,CAAA;IAC7B,IAAI,CAACf,YAAY,CAACkB,gBAAgB,CAAC,IAAI,CAACf,MAAM,CAAC,CAACS,SAAS,CAAC;MACxDC,IAAI,EAAGC,IAAI,IAAI;QACb;QACA,IAAI,CAACZ,eAAe,GAAGY,IAAI,CAACK,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAC5C,IAAI,CAACf,UAAU,GAAG,KAAK;MACzB,CAAC;MACDW,KAAK,EAAGA,KAAK,IAAI;QACfC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC1D,IAAI,CAACX,UAAU,GAAG,KAAK;MACzB;KACD,CAAC;EACJ;CACD;AA7DYR,iBAAiB,GAAAwB,UAAA,EAP7B3B,SAAS,CAAC;EACT4B,OAAO,EAAE,CAAC3B,sBAAsB,CAAC;EACjC4B,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B,CAAC;EACzCC,UAAU,EAAE;CACb,CAAC,C,EACW7B,iBAAiB,CA6D7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}